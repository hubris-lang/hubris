module Product

import Unit

inductive Prod (A : Type) (B : Type)
  | MkProd : A -> B -> Prod A B
end

def first {A B : Type} (p : Prod A B) : A :=
  @Prod.cases_on A B (fun (p : Prod A B) => A) p (fun (a : A) (b : B) => a)
end

-- def second {A B : Type} (p : Prod A B) : B :=
--   match p with
--   | MkProd a b => b
--   end
-- end

def main : Unit :=
  first (MkProd Star Star)
end
